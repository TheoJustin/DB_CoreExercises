<?xml version="1.0" encoding="UTF-8"?><sqlb_project><db path="C:/Users/Lenovo/Downloads/ProjectCase3.db" readonly="0" foreign_keys="1" case_sensitive_like="0" temp_store="0" wal_autocheckpoint="1000" synchronous="2"/><attached/><window><main_tabs open="structure browser pragmas query" current="3"/></window><tab_structure><column_width id="0" width="300"/><column_width id="1" width="0"/><column_width id="2" width="100"/><column_width id="3" width="3785"/><column_width id="4" width="0"/><expanded_item id="0" parent="1"/><expanded_item id="1" parent="1"/><expanded_item id="2" parent="1"/><expanded_item id="3" parent="1"/></tab_structure><tab_browse><current_table name="4,5:mainAlbum"/><default_encoding codec=""/><browse_table_settings><table schema="main" name="Album" show_row_id="0" encoding="" plot_x_axis="" unlock_view_pk="_rowid_"><sort/><column_widths><column index="1" value="251"/><column index="2" value="251"/><column index="3" value="300"/></column_widths><filter_values/><conditional_formats/><row_id_formats/><display_formats/><hidden_columns/><plot_y_axes/><global_filter/></table></browse_table_settings></tab_browse><tab_sql><sql name="SQL 1">-- no 9SELECT CustomerID, CustomerNameFROM Customer-- no 1SELECT PlaylistID, PlaylistNameFROM PlaylistWHERE PlaylistID IN(	SELECT PlaylistID	FROM PlaylistTrack	WHERE TrackID IN (		SELECT TrackID		FROM Track		WHERE AlbumID IN (			SELECT AlbumID			FROM Album			WHERE LOWER(AlbumTitle) LIKE '%love%'		)	))-- no 2SELECT   substr(CustomerName, 1, instr(CustomerName, ' ') - 1) AS [first name],  substr(CustomerName, instr(CustomerName, ' ') + 1) AS [last name],  substr(CustomerName, 1, instr(CustomerName, ' ') - 1) || substr(CustomerEmail, instr(CustomerEmail, '@')) AS CustomerEmail,  SUM(Quantity) AS [Quantity]FROM InvoiceDetail idJOIN InvoiceHeader ih ON id.InvoiceID = ih.InvoiceIDJOIN Customer cs ON cs.CustomerID = ih.CustomerIDGROUP BY CustomerNameORDER BY Quantity DESC-- no 3ALTER TABLE EmployeeADD COLUMN EmployeeSalary INTEGER DEFAULT 0UPDATE Employee-- no 4SELECT UPPER(AlbumTitle), ArtistName, TrackPurchasedFROM (	SELECT AlbumTitle, ArtistName, COUNT(InvoiceID) AS TrackPurchased	FROM Album al	JOIN Artist ar ON al.ArtistID = ar.ArtistID	JOIN Track tr ON tr.AlbumID = al.AlbumID	JOIN InvoiceDetail id ON id.TrackID = tr.TrackID	GROUP BY al.AlbumID)ORDER BY TrackPurchased DESCLIMIT 5-- no 5SELECT TrackName, CustomerID, COUNT(id.InvoiceID)FROM InvoiceHeader ihJOIN InvoiceDetail id ON id.InvoiceID = ih.InvoiceIDJOIN Track tr ON tr.TrackID = id.TrackIDGROUP BY CustomerID-- no 6-- no 9DROP TABLE LongTracks;CREATE TABLE LongTracks(	TrackID TEXT PRIMARY KEY,	TrackName VARCHAR(100),	TrackDuration INT,	FOREIGN KEY (TrackID) REFERENCES Track(TrackID));INSERT INTO LongTracksSELECT TrackID, TrackName, DurationFROM TrackWHERE Duration > (	SELECT AVG(Duration) 	FROM Track)SELECT * FROM LongTracks-- no 10SELECT MediaTypeName, COUNT(TrackID) AS TrackCountFROM MediaType mtINNER JOIN Track t ON mt.MediaTypeID = t.MediaTypeIDGROUP BY mt.MediaTypeNameORDER BY COUNT(TrackID) ASC</sql><current_tab id="0"/></tab_sql></sqlb_project>
